name: Load dataset
inputs:
- {name: type, type: String}
outputs:
- {name: dataset, type: Artifact}
implementation:
  container:
    image: python:3.8
    command:
    - sh
    - -c
    - |2

      if ! [ -x "$(command -v pip)" ]; then
          python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip
      fi

      PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'torchvision' 'kfp==1.8.11' && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp -d)
      printf "%s" "$0" > "$program_path/ephemeral_component.py"
      python3 -m kfp.v2.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"
    - |2+

      import kfp
      from kfp.v2 import dsl
      from kfp.v2.dsl import *
      from typing import *

      def load_dataset(type : str, dataset: Output[Artifact]):
          import torchvision
          import tarfile

          if type=="fmnist":
              torchvision.datasets.FashionMNIST( ".", train=True, download = True, transform=torchvision.transforms.ToTensor())
              with tarfile.open(dataset.path, "w") as tar:
                  tar.add("FashionMNIST")
          elif type=="mnist":
              torchvision.datasets.MNIST( ".", train=True, download = True, transform=torchvision.transforms.ToTensor())
              with tarfile.open(dataset.path, "w") as tar:
                  tar.add("MNIST")

    args:
    - --executor_input
    - {executorInput: null}
    - --function_to_execute
    - load_dataset
