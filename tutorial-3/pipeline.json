{
  "pipelineSpec": {
    "components": {
      "comp-build-src": {
        "executorLabel": "exec-build-src",
        "outputDefinitions": {
          "artifacts": {
            "source": {
              "artifactType": {
                "schemaTitle": "system.Artifact",
                "schemaVersion": "0.0.1"
              }
            }
          }
        }
      },
      "comp-load-dataset": {
        "executorLabel": "exec-load-dataset",
        "inputDefinitions": {
          "parameters": {
            "type": {
              "type": "STRING"
            }
          }
        },
        "outputDefinitions": {
          "artifacts": {
            "dataset": {
              "artifactType": {
                "schemaTitle": "system.Artifact",
                "schemaVersion": "0.0.1"
              }
            }
          }
        }
      },
      "comp-loads": {
        "executorLabel": "exec-loads",
        "inputDefinitions": {
          "artifacts": {
            "source": {
              "artifactType": {
                "schemaTitle": "system.Artifact",
                "schemaVersion": "0.0.1"
              }
            }
          }
        }
      }
    },
    "deploymentSpec": {
      "executors": {
        "exec-build-src": {
          "container": {
            "args": [
              "--executor_input",
              "{{$}}",
              "--function_to_execute",
              "build_src"
            ],
            "command": [
              "sh",
              "-c",
              "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'kfp==1.8.11' && \"$0\" \"$@\"\n",
              "sh",
              "-ec",
              "program_path=$(mktemp -d)\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\npython3 -m kfp.v2.components.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
              "\nimport kfp\nfrom kfp.v2 import dsl\nfrom kfp.v2.dsl import *\nfrom typing import *\n\ndef build_src(source: Output[Artifact]):\n    import tarfile\n    code = \"import torch \\n\\\nclass my_nn(torch.nn.Module):\\n\\\n    def __init__(self):\\n\\\n        super(my_nn,self).__init__()\\n\\\n        self.linear1= torch.nn.Linear(28*28,256)\\n\\\n        self.linear2= torch.nn.Linear(256,64)\\n\\\n        self.linear3= torch.nn.Linear(64,32)\\n\\\n        self.linear4= torch.nn.Linear(32,10)\\n\\\n        self.soft = torch.nn.Softmax()\\n\\\n        self.relu= torch.nn.ReLU()\\n\\\n    def forward(self,x):\\n\\\n        x=self.relu(self.linear1(x))\\n\\\n        x=self.relu(self.linear2(x))\\n\\\n        x=self.relu(self.linear3(x))\\n\\\n        return self.soft(self.linear4(x))\\n\\\n\"\n    text_file = open(\"nn.py\", \"w\")\n    text_file.write(code)\n    text_file.close()\n\n    with tarfile.open(source.path, \"w\") as tar:\n            tar.add(\"nn.py\")\n\n"
            ],
            "image": "python:3.7"
          }
        },
        "exec-load-dataset": {
          "container": {
            "args": [
              "--executor_input",
              "{{$}}",
              "--function_to_execute",
              "load_dataset"
            ],
            "command": [
              "sh",
              "-c",
              "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'torchvision' 'kfp==1.8.11' && \"$0\" \"$@\"\n",
              "sh",
              "-ec",
              "program_path=$(mktemp -d)\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\npython3 -m kfp.v2.components.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
              "\nimport kfp\nfrom kfp.v2 import dsl\nfrom kfp.v2.dsl import *\nfrom typing import *\n\ndef load_dataset(type : str, dataset: Output[Artifact]):\n    import torchvision\n    import tarfile\n\n    if type==\"fmnist\":\n        torchvision.datasets.FashionMNIST( \".\", train=True, download = True, transform=torchvision.transforms.ToTensor())\n        with tarfile.open(dataset.path, \"w\") as tar:\n            tar.add(\"FashionMNIST\")\n    elif type==\"mnist\":\n        torchvision.datasets.MNIST( \".\", train=True, download = True, transform=torchvision.transforms.ToTensor())\n        with tarfile.open(dataset.path, \"w\") as tar:\n            tar.add(\"MNIST\")\n\n"
            ],
            "image": "python:3.8"
          }
        },
        "exec-loads": {
          "container": {
            "args": [
              "--executor_input",
              "{{$}}",
              "--function_to_execute",
              "loads"
            ],
            "command": [
              "sh",
              "-c",
              "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'torch' 'kfp==1.8.11' && \"$0\" \"$@\"\n",
              "sh",
              "-ec",
              "program_path=$(mktemp -d)\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\npython3 -m kfp.v2.components.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
              "\nimport kfp\nfrom kfp.v2 import dsl\nfrom kfp.v2.dsl import *\nfrom typing import *\n\ndef loads(source: Input[Artifact]):\n    import tarfile\n    tarfile.open(name=source.path, mode=\"r\").extractall('.')\n    import nn\n\n"
            ],
            "image": "python:3.8"
          }
        }
      }
    },
    "pipelineInfo": {
      "name": "nn-pipeline"
    },
    "root": {
      "dag": {
        "tasks": {
          "build-src": {
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-build-src"
            },
            "taskInfo": {
              "name": "build-src"
            }
          },
          "load-dataset": {
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-load-dataset"
            },
            "inputs": {
              "parameters": {
                "type": {
                  "componentInputParameter": "datatype"
                }
              }
            },
            "taskInfo": {
              "name": "load-dataset"
            }
          },
          "loads": {
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-loads"
            },
            "dependentTasks": [
              "build-src"
            ],
            "inputs": {
              "artifacts": {
                "source": {
                  "taskOutputArtifact": {
                    "outputArtifactKey": "source",
                    "producerTask": "build-src"
                  }
                }
              }
            },
            "taskInfo": {
              "name": "loads"
            }
          }
        }
      },
      "inputDefinitions": {
        "parameters": {
          "datatype": {
            "type": "STRING"
          }
        }
      }
    },
    "schemaVersion": "2.0.0",
    "sdkVersion": "kfp-1.8.11"
  },
  "runtimeConfig": {}
}